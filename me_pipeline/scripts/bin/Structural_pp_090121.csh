#!/bin/csh
## TOL, Version 1, 08/2021
set program = $0; set program = $program:t

###########################
# Loading params and usage
###########################
if (${#argv} < 1) then
	echo "#Usage:	"$program" <params_file> <instructions_file> [MODULE_START] [MODULE_EXIT?]"
	echo ""
	echo "	[MODULE_START] options include: T1_DCM, T1_AVG, T2_DCM, T2_AVG, T1_REG2ATL, T2toT1REG, SURFACE_CREATION,"
	echo "	POSTFREESURFER, POSTFREESURFER2ATL, CREATE_RIBBON, SEG2ATL, SUBCORTICAL_MASK, IMAGEREG_CHECK."
	echo "	Default (no input) is to start from beginning of pipeline."
	echo ""
	echo "	[MODULE_EXIT?] option can be 1 or 0, which specifies whether script ends immediately after MODULE_START section (1)"
	echo "	or continues with remaining steps in pipeline (0). Default is for script to continue (0)."
	exit 1
endif

set prmfile = $1
echo "prmfile="$prmfile

if (! -e $prmfile) then
	echo $program": "$prmfile not found
	exit -1
endif
source $prmfile
set instructions = ""
if (${#argv} > 1) then
	set instructions = $2
	if (! -e $instructions) then
		echo $program": "$instructions not found
		exit -1
	endif
	cat $instructions
	source $instructions
endif
set basedir = $cwd
set subdir = $studydir/$patid
set T1dir  = $subdir/T1
set T2dir  = $subdir/T2

if ( $#mprdirs > 1 ) then
	set mpr = ${structid}_T1w_debias_avg
else
	set mpr = ${structid}_T1w_1_debias
endif

if ( $#t2wdirs > 1 ) then
	set t2wimg = ${structid}_T2w_debias_avg
else
	set t2wimg = ${structid}_T2w_1_debias
endif

if ( ! $?nlalign ) set nlalign = 0
if ( $nlalign ) then				# nonlinear atlas alignment will be computed
	set tres = MNI152_T1;			# string used to construct the postmat filename
	set outspacestr = "nl_"
	set fnwarp = ${T1dir}/atlas/fnirt/${mpr}_to_MNI152_T1_2mm_fnirt_coeff	# warp file generated by fnirt
	echo "nonlinear alignment not yet vetted"
	#exit
else
	set tres = 711-2B_111;
	set outspacestr = ""
endif

if ( ! $?outspace_flag ) then 
	echo "The variable outspace_flag must be defined."
	exit -1
endif
switch ( $outspace_flag )	# dependency on mat files in $REFDIR
	case "333":
		set outspace = $REFDIR/711-2B_333
		set atlasdir = 711-2B
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_711-2B_333.mat; breaksw;
	case "222":
		set outspace = $REFDIR/711-2B_222
		set atlasdir = 711-2B
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_711-2B_222.mat; breaksw;
	case "222AT":
		set outspace = $REFDIR/711-2B_222AT
		set atlasdir = 711-2B
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_711-2B_222AT.mat; breaksw;
	case "111":
		echo "Warning: 111 is going to take time to process and quite a bit of disk space"
		set outspace = $REFDIR/711-2B_111
		set atlasdir = 711-2B
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_711-2B_111.mat; breaksw;
	case "mni3mm":
		set outspace = $REFDIR/MNI152/MNI152_T1_3mm
		set atlasdir = MNI
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_MNI152_T1.mat; breaksw;
	case "mni2mm":
		set outspace = $REFDIR/MNI152/MNI152_T1_2mm
		set atlasdir = MNI
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_MNI152_T1.mat; breaksw;
	case "mni1mm":
		echo "Warning: 111 is going to take time to process and quite a bit of disk space"
		set outspace = $REFDIR/MNI152/MNI152_T1_1mm
		set atlasdir = MNI
		set postmat =  $REFDIR/FSLTransforms/${tres}_to_MNI152_T1.mat; breaksw;
	default:
		set outspace = `echo $outspace | sed -E 's/\.4dfp(\.img){0,1}$//'`
		if ( ! $?postmat ) then
			echo " when specifing a custom outspace a postmat file must be specified."
			exit -1;
		endif
endsw
set outspacestr = ${outspacestr}${outspace:t}	# e.g., "nl_711-2B_333"

###############
# parse options
###############
set enter = "";
if (${#argv} > 2) then
	set enter = $3
endif

set doexit = 0
if (${#argv} > 3) then
	set doexit = $4
endif

echo $enter
if ($enter == T1_DCM)			goto T1_DCM;
if ($enter == T1_AVG)			goto T1_AVG;
if ($enter == T2_DCM)			goto T2_DCM;
if ($enter == T2_AVG)			goto T2_AVG;
if ($enter == T1_REG2ATL)		goto T1_REG2ATL;
if ($enter == T2toT1REG)		goto T2toT1REG;
if ($enter == SURFACE_CREATION)		goto SURFACE_CREATION;
if ($enter == POSTFREESURFER)		goto POSTFREESURFER;
if ($enter == SEG2ATL)			goto SEG2ATL;
if ($enter == POSTFREESURFER2ATL)	goto POSTFREESURFER2ATL;
if ($enter == CREATE_RIBBON)		goto CREATE_RIBBON;
if ($enter == SUBCORTICAL_MASK)		goto SUBCORTICAL_MASK;
if ($enter == IMAGEREG_CHECK)		goto IMAGEREG_CHECK;

T1_DCM:
################
# Convert dcm to nii, debias
################
echo "############## T1, DCM to NII conversion and Debias ##############"
mkdir -p  $T1dir
pushd $T1dir

# if we are in bids mode, grab the grab the T1w files from the bids directory
# this will override the mprdirs variable set in the struct params file
if ( $bids ) then
	set mprdirs = (`parse_bids --bids_dir $bidsdir --modality T1w`)
endif

@ i = 1
foreach mprdir ( $mprdirs )
	if ( $?bids ) then
		# Simply copy over the nifti file from the bids directory
		set mpr = ${structid}_T1w_${i}
		echo "Copying ${mprdir} to ${mpr}.nii.gz"
		cp ${mprdir} ${mpr}.nii.gz
		# gunzip the file
		gunzip ${mpr}.nii.gz
	else
		# Convert dcm to nii
		set mpr = ${structid}_T1w_${i}
		dcm2niix -o . -f $mpr -z n ${basedir}/${mprdir} || exit $status
	endif
	
	nifti_4dfp -4 $mpr $mpr -N
	rm ${mpr}.nii
	nifti_4dfp -n $mpr $mpr
	rm ${mpr}.4dfp.*
	
	# Bias field correction of mpr
	fast -t 1 -n 3 -H 0.1 -I 4 -l 20.0 -v --nopve -B -o ${mpr} ${mpr}
	mv ${mpr}_restore.nii.gz ${mpr}_debias.nii.gz
	rm ${mpr}_seg.nii.gz 
	
	# Convert nii to 4dfp
	niftigz_4dfp -4 ${mpr}_debias ${mpr}_debias -N
	@ i++
end
popd
if ( $doexit ) exit

T1_AVG:
###############
# Average T1s
###############
echo "############## Compute Average T1 ##############"
pushd $T1dir
if ( $#mprdirs > 1 ) then
	@ i = 1
	set str = ""
	while ( $i <= $#mprdirs )
		set mpr = ${structid}_T1w_${i}_debias
		set str = "${str} $mpr"
		@ i++
	end
echo cross_image_resolve_4dfp ${structid}_T1w_debias_avg ${str}
	cross_image_resolve_4dfp ${structid}_T1w_debias_avg ${str}
	set mpruse = ${structid}_T1w_debias_avg
else
	set mpruse = ${structid}_T1w_1_debias
endif
niftigz_4dfp -n ${mpruse} ${mpruse}
popd
if ( $doexit ) exit

T2_DCM:
################
# Convert dcm to nii, debias
################
echo "############## T2, DCM to NII conversion and Debias ##############"
mkdir -p $T2dir
pushd $T2dir

# if we are in bids mode, grab the grab the T2w files from the bids directory
# this will override the mprdirs variable set in the struct params file
if ( $bids ) then
	set t2wdirs = (`parse_bids --bids_dir $bidsdir --modality T2w`)
endif

@ i = 1
foreach t2wdir ( $t2wdirs )
	if ( $?bids ) then
		# Simply copy over the nifti file from the bids directory
		set t2w = ${structid}_T2w_${i}
		echo "Copying ${t2wdir} to ${t2w}.nii.gz"
		cp ${t2wdir} ${t2w}.nii.gz
		# gunzip the file
		gunzip ${t2w}.nii.gz
	else
		# Convert dcm to nii
		set t2w = ${structid}_T2w_${i}
		dcm2niix -o . -f $t2w -z n ${basedir}/${t2wdir} || exit $status
	endif
	
	# Bias field correction of t2w
	bet $t2w ${t2w}_brain -R || exit $status
	fast -t 2 -n 3 -H 0.1 -I 4 -l 20.0 -v --nopve -B -o ${t2w}_brain ${t2w}_brain || exit $status
	rm ${t2w}_brain_seg.nii.gz 	
	# Convert nii to 4dfp
	niftigz_4dfp -4 ${t2w}_brain_restore ${t2w}_brain_restore -N
	nifti_4dfp -4 ${t2w} ${t2w} -N
	extend_fast_4dfp ${t2w} ${t2w}_brain_restore ${t2w}_debias || exit $status
	@ i++
end
popd
if ( $doexit ) exit

T2_AVG:
###############
# Average T2s
###############
echo "############## Compute Average T2 ##############"
pushd $T2dir
if ( $#t2wdirs > 1 ) then
	@ i = 1
	set str = ""
	while ( $i <= $#t2wdirs )
		set t2wuse = ${structid}_T2w_${i}_debias
		set str = "${str} ${t2wuse}"
		@ i++
	end
	echo cross_image_resolve_4dfp ${structid}_T2w_debias_avg ${str}
	cross_image_resolve_4dfp ${structid}_T2w_debias_avg ${str}
	set t2wimg = ${structid}_T2w_debias_avg
else
	set t2wimg = ${structid}_T2w_1_debias
endif
niftigz_4dfp -n ${t2wimg} ${t2wimg}
popd
if ( $doexit ) exit

T1_REG2ATL:
###########################
# Register to atlas
###########################
echo "############## Register T1 to Atlas ##############"
pushd $T1dir
if ( ! -d atlas) mkdir -p atlas
pushd atlas
if ( $#mprdirs > 1 ) then
	set mpr = ${structid}_T1w_debias_avg
else
	set mpr = ${structid}_T1w_1_debias
endif

if ( $#t2wdirs > 1 ) then
	set t2wimg = ${structid}_T2w_debias_avg
else
	set t2wimg = ${structid}_T2w_1_debias
endif
cp ../${mpr}.4dfp.* .

set modes = (0 0 0 0 0)
@ modes[1] = 1024 + 256 + 3; @ modes[2]	= $modes[1]; @ modes[3] = 3072 + 256 + 7;
@ modes[4] = 2048 + 256 + 7; @ modes[5] = $modes[4];
set t4file = ${mpr}_to_${target:t}_t4 
if ( -e $t4file ) /bin/rm/$t4file
set ref = $target
set refmask = $REFDIR/711-2B_mask_g5_111z
set log = ${mpr}_to_${target:t}.log
if ( -e $log ) /bin/rm/$log
@ k = 1
while ( $k <= $#modes )
	echo "imgreg_4dfp $ref $refmask $mpr none $t4file $modes[$k]"
	imgreg_4dfp $ref $refmask $mpr none $t4file $modes[$k] >> $log
	@ k++
end
t4img_4dfp ${mpr}_to_${target:t}_t4 $mpr ${mpr}_on_${target:t}_111 -O111 || exit 1
niftigz_4dfp -n ${mpr} ${mpr}

########################################################################
# Perform non-linear registration if flagged and transform to outspace
########################################################################
if ( $nlalign ) then
	if ( ! -d fnirt ) mkdir -p fnirt
	pushd fnirt
	# must have .mat file from target 111 711-2B to the reference
	if ( ! -e ${fnwarp}.nii || ! $useold ) then	
		gunzip ../${mpr}.nii.gz
		t4_mul ../${mpr}_to_${target:t}_t4 $REFDIR/MNI152/711-2B_to_MNI152lin_T1_t4 ${mpr}_to_MNI152_T1_t4 || exit 1 
		aff_conv 4f ../${mpr}  $REFDIR/MNI152/MNI152_T1_2mm ${mpr}_to_MNI152_T1_t4 ../${mpr} \
			$REFDIR/MNI152/MNI152_T1_2mm ${mpr}_to_MNI152_T1.mat || exit $status
		fnirt --in=../${mpr} --config=T1_2_MNI152_2mm \
			--aff=${mpr}_to_MNI152_T1.mat \
			--cout=$fnwarp \
			--iout=${mpr}_on_fn_MNI152_T1_2mm || exit $status
		gzip ../${mpr}.nii
	endif
	popd	# out of fnirt
	
	applywarp --ref=$outspace --in=${mpr} -w $fnwarp --postmat=$postmat \
		--out=${mpr}_on_${outspacestr} || exit $status
	niftigz_4dfp -4 ${mpr}_on_${outspacestr} ${mpr}_on_${outspacestr}	
endif

if (! $nlalign ) then
	gunzip ${mpr}.nii.gz
	aff_conv 4f ${mpr} $REFDIR/711-2B_111 ${mpr}_to_${target:t}_t4 ${mpr} $REFDIR/711-2B_111 ${mpr}_to_${target:t}_111.mat || exit $status
	convert_xfm -omat ${mpr}_to_${outspace:t}.mat -concat $postmat ${mpr}_to_${target:t}_111.mat
	flirt -ref $outspace -in ${mpr} -applyxfm -init ${mpr}_to_${outspace:t}.mat -out ${mpr}_on_${outspacestr} || exit $status
	niftigz_4dfp -4 ${mpr}_on_${outspacestr} ${mpr}_on_${outspacestr}  || exit $status
	gzip ${mpr}.nii
endif
popd
popd
if ( $doexit ) exit

T2toT1REG:
###########################################################
# Register T2 to T1
###########################################################
echo "############## Register T2 to T1 ##############"
pushd $T1dir/atlas
cp ${T2dir}/${t2wimg}.4dfp.* ${T1dir}/atlas
nifti_4dfp -n ${t2wimg} ${t2wimg}

#######################
# create mpr brain mask
#######################
msktgen_4dfp ${mpr} -T$REFDIR/${target:t}
#rename ${mpr}_mskt ${mpr}_brain_mask ${mpr}_mskt.*
foreach e ( img img.rec hdr ifh )
	mv ${mpr}_mskt.4dfp.${e} ${mpr}_brain_mask.4dfp.${e}
end
niftigz_4dfp -n ${mpr}_brain_mask ${mpr}_brain_mask	# will be used in t2w->mpr registration
	
#########################
# register t2w to MP-RAGE
#########################
set mode = (4099 4099 1027 2051 2051 10243)
echo $mode
set msk = (none none none ${mpr}_brain_mask ${mpr}_brain_mask ${mpr}_brain_mask ${mpr}_brain_mask )
set t4file = ${t2wimg}_to_${mpr}_t4
if ( ! -e $t4file || ! $useold ) then
	if (-e $t4file) /bin/rm $t4file
	set log = ${t2wimg}_to_${mpr}.log
	if ( -e $log ) /bin/rm $log
	@ i = 1
	while ( $i <= $#mode )
		echo imgreg_4dfp ${mpr} ${msk[$i]} $t2wimg none $t4file $mode[$i] >> $log
		imgreg_4dfp ${mpr} ${msk[$i]} $t2wimg none $t4file $mode[$i] >> $log || exit $status
		@ i++
	end
endif
t4_mul ${t2wimg}_to_${mpr}_t4 ${mpr}_to_${target:t}_t4 ${t2wimg}_to_${target:t}_t4  || exit $status
t4img_4dfp ${t2wimg}_to_${mpr}_t4 ${t2wimg} ${t2wimg}_on_${mpr} -O${mpr}
niftigz_4dfp -n ${t2wimg}_on_${mpr} ${t2wimg}_on_${mpr}

#############################
# Transform to final outspace
#############################
if ( $nlalign ) then
	nifti_4dfp -n ${t2wimg} ${t2wimg}
	gunzip ${mpr}.nii.gz
	aff_conv 4f ${t2wimg} ${mpr} ${t2wimg}_to_${mpr}_t4 ${t2wimg} ${mpr} ${t2wimg}_to_${mpr}.mat || exit $status
	convertwarp --ref=fnirt/${mpr}_on_fn_MNI152_T1_2mm --premat=${t2wimg}_to_${mpr}.mat \
		--warp1=$fnwarp --out=fnirt/${t2wimg}_to_MNI152_T1_2mm_fnirt_coeff  || exit $status
	applywarp --in=${t2wimg}.nii --ref=$REFDIR/MNI152/MNI152_T1_2mm \
		--warp=fnirt/${t2wimg}_to_MNI152_T1_2mm_fnirt_coeff.nii \
		-o fnirt/${t2wimg}_on_fn_MNI152_T1_2mm --interp=nn || exit $status
	applywarp --in=${t2wimg}.nii --ref=$outspace \
		--warp=fnirt/${t2wimg}_to_MNI152_T1_2mm_fnirt_coeff.nii --postmat=$postmat \
		-o fnirt/${t2wimg}_on_${outspacestr}  || exit $status
	gzip ${mpr}.nii
	gzip ${t2wimg}.nii
endif

if (! $nlalign ) then
	gunzip ${mpr}.nii.gz
	gunzip ${t2wimg}.nii.gz
	aff_conv 4f ${t2wimg} ${mpr} ${t2wimg}_to_${mpr}_t4 ${t2wimg} ${mpr} ${t2wimg}_to_${mpr}.mat || exit $status
	convert_xfm -omat ${t2wimg}_to_${outspace:t}.mat -concat ${mpr}_to_${outspace:t}.mat ${t2wimg}_to_${mpr}.mat
	flirt -ref $outspace -in  ${t2wimg} -applyxfm -init ${t2wimg}_to_${outspace:t}.mat -out ${t2wimg}_on_${outspacestr} || exit $status
	niftigz_4dfp -4 ${t2wimg}_on_${outspacestr} ${t2wimg}_on_${outspacestr}  || exit $status
	gzip ${mpr}.nii
	gzip ${t2wimg}.nii
endif
popd
if ( $doexit ) exit

SURFACE_CREATION:
###########################################################
# Surface processing and post freesurfer pipeline
###########################################################
echo "############## Run Freesurfer ##############"
pushd ${T1dir}
if ( ! -d ${FSdir} ) mkdir -p ${FSdir}
echo "recon-all -all -sd ${FSdir} -s ${structid} -i ${mpr}.nii.gz -T2 ../T2/${t2wimg}_on_${mpr}.nii.gz -T2pial"
recon-all -all -sd ${FSdir} -s ${structid} -i ${mpr}.nii.gz -T2 ./atlas/${t2wimg}_on_${mpr}.nii.gz -T2pial -parallel || exit ${status} #-custom-tal-atlas TRIO_Y_NDC_as_mni_average_305
cp ${mpr}.nii.gz ${FSdir}/${structid} 
popd
if ( $doexit ) exit

POSTFREESURFER:
#############################################################################
# Post-Freesurfer pipeline for generating fsLR surfaces in workbench format
#############################################################################
echo "############## Run PostFreesurfer Surface pipeline ##############"
PostFreeSurferPipeline_fsavg2fslr_080921.bat ${structid} ${FSdir} ${mpr} ${PostFSdir} || exit ${status}
if ( $doexit ) exit

SEG2ATL:
###############################################
# Apply transform to aparc+aseg
###############################################
echo "############## Transform aparc+aseg to final outspace ##############"
pushd ${T1dir}/atlas
cp ${PostFSdir}/${structid}/NativeVol/aparc+aseg.nii.gz ./${structid}_aparc+aseg.nii.gz
cp ${PostFSdir}/${structid}/NativeVol/wmparc.nii.gz ./${structid}_wmparc.nii.gz
niftigz_4dfp -4 ${structid}_aparc+aseg ${structid}_aparc+aseg
niftigz_4dfp -4 ${structid}_wmparc ${structid}_wmparc
flirt -ref $outspace -in ${structid}_aparc+aseg -applyxfm -init ${mpr}_to_${outspace:t}.mat -interp nearestneighbour -out \
	${structid}_aparc+aseg_on_${outspace:t} || exit $status
flirt -ref $outspace -in ${structid}_wmparc -applyxfm -init ${mpr}_to_${outspace:t}.mat -interp nearestneighbour -out \
	${structid}_wmparc_on_${outspace:t} || exit $status
niftigz_4dfp -4 ${structid}_aparc+aseg_on_${outspace:t} ${structid}_aparc+aseg_on_${outspace:t} || exit $status
niftigz_4dfp -4 ${structid}_wmparc_on_${outspace:t} ${structid}_wmparc_on_${outspace:t} || exit $status

###############################################
# Perform non-linear registration if flagged
###############################################
if ( $nlalign ) then
	pushd fnirt
	applywarp --ref=$outspace --in=../${structid}_aparc+aseg -w $fnwarp --postmat=$postmat  \
		--interp=nn --out=${structid}_aparc+aseg_on_${outspacestr} || exit $status
	niftigz_4dfp -4 ${structid}_aparc+aseg_on_${outspacestr} ${structid}_aparc+aseg_on_${outspacestr}	
endif

##################
# gray matter mask
##################
ROI2mask_4dfp ${structid}_aparc+aseg_on_${outspacestr} -f$REFDIR/FS_GM.lst ${structid}_GM_on_${outspacestr}  || exit $status
scale_4dfp    ${structid}_GM_on_${outspacestr} -1 -b1 -acomp  || exit $status
imgblur_4dfp  ${structid}_GM_on_${outspacestr}_comp 6  || exit $status

###################
# white matter mask
###################
ROI2mask_4dfp ${structid}_aparc+aseg_on_${outspacestr} 2,41,77 ${structid}_WM_on_${outspacestr} || exit $status
maskimg_4dfp  ${structid}_WM_on_${outspacestr} ${structid}_GM_on_${outspacestr}_comp_b60 ${structid}_WM_on_${outspacestr}_erode -t0.9  || exit $status

################
# ventricle mask
################
ROI2mask_4dfp ${structid}_aparc+aseg_on_${outspacestr} 4,14,15,24,43 ${structid}_VENT_on_${outspacestr}  || exit $status
maskimg_4dfp  ${structid}_VENT_on_${outspacestr} ${structid}_GM_on_${outspacestr}_comp_b60 ${structid}_VENT_on_${outspacestr}_erode -t0.9  || exit $status
/bin/rm ${structid}_GM_on_${outspacestr}_comp*
if ( $nlalign ) popd # out of fnirt, if in fnirt

#########################################################################
# compute brain mask from $t2wimg to be used for BOLD -> t2w registration
#########################################################################
t4_inv ${t2wimg}_to_${mpr}_t4 ${mpr}_to_${t2wimg}_t4 || exit $status
t4img_4dfp ${mpr}_to_${t2wimg}_t4 ${structid}_aparc+aseg ${structid}_aparc+aseg_on_${t2wimg} -O./${t2wimg} -n || exit $status
maskimg_4dfp ${structid}_aparc+aseg_on_${t2wimg} ${structid}_aparc+aseg_on_${t2wimg} ${structid}_aparc+aseg_on_${t2wimg}_msk -v1
ROI2mask_4dfp ${structid}_aparc+aseg_on_${t2wimg} 4,43 Vents || exit $status
set CSFThresh2 = `qnt_4dfp ${t2wimg} Vents | awk '$1~/Mean/{print 2.0/$NF}'` || exit $status
scale_4dfp ${t2wimg} $CSFThresh2 -ameandiv2   || exit 1
scale_4dfp ${structid}_aparc+aseg_on_${t2wimg}_msk -1 -b1 -ainvert || exit $status
maskimg_4dfp ${t2wimg}_meandiv2 ${structid}_aparc+aseg_on_${t2wimg}_msk_invert ${t2wimg}_meandiv2_nobrain || exit $status
imgopr_4dfp -a${t2wimg}_meandiv2_brainnorm ${t2wimg}_meandiv2_nobrain ${structid}_aparc+aseg_on_${t2wimg}_msk || exit $status
zero_lt_4dfp 1 ${t2wimg}_meandiv2_brainnorm ${t2wimg}_meandiv2_brainnorm_thresh || exit $status
gauss_4dfp ${structid}_aparc+aseg_on_${t2wimg}_msk 0.4 ${structid}_aparc+aseg_on_${t2wimg}_msk_smoothed || exit $status
imgopr_4dfp -p${t2wimg}_meandiv2_brainnorm_thresh_2 ${t2wimg}_meandiv2_brainnorm_thresh ${structid}_aparc+aseg_on_${t2wimg}_msk_smoothed || exit $status
nifti_4dfp -n ${t2wimg}_meandiv2_brainnorm_thresh_2 ${t2wimg}_meandiv2_brainnorm_thresh_2 || exit $status
maskimg_4dfp ${t2wimg} ${t2wimg}_meandiv2_brainnorm_thresh_2 ${t2wimg}_tmp_masked -t.1 -v1 || exit $status
cluster_4dfp ${t2wimg}_tmp_masked -R > /dev/null || exit $status
zero_gt_4dfp 2 ${t2wimg}_tmp_masked_ROI || exit $status
blur_n_thresh_4dfp ${t2wimg}_tmp_masked_ROIz 0.6 0.15 ${t2wimg}_brain_mask || exit $status
/bin/rm ${t2wimg}_meandiv2* ${t2wimg}_tmp_masked* ${structid}_aparc+aseg_on_${t2wimg}*		

popd	# out of atlas
if ( $doexit ) exit

SUBCORTICAL_MASK:
###############################################
# Apply transform to aparc+aseg
###############################################
echo "############## Make subcortical mask ##############"
pushd ${subdir}
if (! -d subcortical_mask ) mkdir -p subcortical_mask
pushd subcortical_mask
cp ${T1dir}/atlas/${structid}_wmparc_on_${outspace:t}.nii.gz .
cp ${DATA_DIR}/FreeSurferSubcorticalLabelTableLut* .
cp ${DATA_DIR}/standard_mesh_atlases/*.atlasroi.32k_fs_LR.shape.gii .
wb_command -volume-label-import ${structid}_wmparc_on_${outspace:t}.nii.gz FreeSurferSubcorticalLabelTableLut.txt subcortical_mask_LR_${outspace:t}.nii -discard-others -unlabeled-value 0

popd
popd
if ( $doexit ) exit

POSTFREESURFER2ATL:
#############################################################################
# Resample fsLR surfaces final output space
#############################################################################
echo "############## Transform fsLR Surface to final outspace ##############"
if ( $nlalign ) then
	echo "WARNING: postfreesurfer2atl and subsequent steps only work with linear alignment"
	exit
else
native_to_atlas_resample_surface_090221.csh $1 $2 || exit ${status}
endif
if ( $doexit ) exit

CREATE_RIBBON:
#############################################################################
# Create cortical ribbon volume
#############################################################################
echo "############## Create Ribbon in final outspace ##############"
create_ribbon_pp_090221.csh $1 $2
if ( $doexit ) exit



IMAGEREG_CHECK:
###############################################
# Capture images of registration quality
###############################################
echo "############## Images of registration ##############"
set Lpial = "${PostFSdir}/${structid}/${atlasdir}/Native/${structid}.L.pial.native.surf.gii"
set Rpial = "${PostFSdir}/${structid}/${atlasdir}/Native/${structid}.R.pial.native.surf.gii"
set Lwhite = "${PostFSdir}/${structid}/${atlasdir}/Native/${structid}.L.white.native.surf.gii"
set Rwhite = "${PostFSdir}/${structid}/${atlasdir}/Native/${structid}.R.white.native.surf.gii"

set volume = "${T1dir}/atlas/${mpr}_on_${outspacestr}.nii.gz"
set outname = "${T1dir}/atlas/${mpr}_on_${outspacestr}_regcheck"
batch_wb_image_capture_volreg $volume $Lpial $Lwhite $Rpial $Rwhite $outname
# eog ${outname}.png &

set volume = "${T1dir}/atlas/${t2wimg}_on_${outspacestr}.nii.gz"
set outname = "${T1dir}/atlas/${t2wimg}_on_${outspacestr}_regcheck"
batch_wb_image_capture_volreg $volume $Lpial $Lwhite $Rpial $Rwhite $outname
# eog ${outname}.png &
exit

